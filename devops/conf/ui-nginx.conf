
server {
    listen       80;
    listen       [::]:80;
    server_name  example.info;
    root         /usr/share/nginx/html;
    server_tokens off;

    client_max_body_size 1m;

    access_log /var/log/nginx/http_only.example.info.access.log;
    error_log /var/log/nginx/http_only.example.info.error.log;

    add_header X-Frame-Options "DENY";

    location /.well-known/acme-challenge {
        alias /var/www/html/.well-known/acme-challenge;
        location ~ /.well-known/acme-challenge/(.*) {
            add_header Content-Type application/jose+json;
        }
    }

    #location / {
    #    rewrite ^ https://dev.example.info$request_uri? permanent;
    #}
    #if ($scheme != "https") {
    #    return 301 https://$host$request_uri;
    #} # managed by Certbot
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    server_name example.info;
    #ssl_certificate         /etc/letsencrypt/live/example.info/fullchain.pem;
    #ssl_certificate_key     /etc/letsencrypt/live/example.info/privkey.pem;
    #ssl_trusted_certificate /etc/letsencrypt/live/example.info/fullchain.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    server_tokens off;

    # put to top level nginx config
    #limit_req_zone $binary_remote_addr zone=apiratelimit:10m rate=4r/s;

    # to test it:
    # for i in {0..50}; do (curl -Is https://example.info/ | head -n1 &) 2>/dev/null; done

    access_log /var/log/nginx/example.info.access.log;
    error_log /var/log/nginx/example.info.error.log;

    add_header X-Frame-Options "DENY";

    client_max_body_size 1m;

    location /.well-known/acme-challenge {
        alias /var/www/html/.well-known/acme-challenge;
        location ~ /.well-known/acme-challenge/(.*) {
            add_header Content-Type application/jose+json;
        }
    }

    location /static/ {
        alias /opt/example.info/var/static_root/;
    }

    location = /favicon.ico {
        alias /opt/example.info/var/static_root/favicon.png;
    }

    location / {
        proxy_set_header    Host $http_host;
        proxy_set_header    X-Real-IP   $remote_addr;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto $scheme;

        #limit_req zone=apiratelimit burst=5;

        proxy_redirect off;
        proxy_pass http://127.0.0.1:8666/;
    }

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    # Generate with:
    #   openssl dhparam -out /etc/nginx/dhparam.pem 2048
    ssl_dhparam /etc/ssl/private/dhparams.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    ssl_prefer_server_ciphers on;

    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    ssl_stapling on;
    ssl_stapling_verify on;

ssl_certificate /etc/letsencrypt/live/example.info-0001/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/example.info-0001/privkey.pem; # managed by Certbot
}
